{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,G,YAAK,SAACC,GAAD,OAEb,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAG1B,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCPVC,G,MAAW,SAACR,GAAD,OAEjB,qBAAKC,UAAU,YAAf,SAEED,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLfM,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAEpB,uBAAOZ,UAAU,SACjBa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCCG,E,kDApCd,aACC,IAAD,8BACE,gBAOFH,aAAa,SAACI,GAAD,OAAK,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SANrD,EAAKC,MAAM,CACVb,SAAS,GACTU,YAAY,IAJf,E,gEAWG,IAAD,OACII,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,+BAEhC,IAAD,EACqBC,KAAKN,MAA5Bb,EADE,EACFA,SAAUU,EADR,EACQA,YACVU,EAAgBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAEA,EAAQE,KAAKyB,cACbC,SAASb,EAAYc,wBAElE,OACD,sBAAKhC,UAAU,MAAf,UACA,kDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAiBe,KAAKf,eAE9D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA5BNK,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.24933473.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card=(props)=>\r\n    (\r\n     <div className='card-container'>\r\n         <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}>\r\n         \r\n         </img>\r\n     <h2>{props.monster.name}</h2>\r\n     <p>{props.monster.email}</p>\r\n     </div>\r\n    )\r\n","import React from 'react'\r\nimport { Card } from '../card/card.component'\r\nimport './card-list.styles.css'\r\nexport const CardList = (props)=>(\r\n\r\n       <div className='card-list'>\r\n        {\r\n         props.monsters.map(monster=>(\r\n         <Card key={monster.id} monster={monster}/>\r\n        )) }        \r\n    </div>\r\n        );\r\n\r\n","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox =({placeholder, handleChange})=>\r\n(\r\n    <input className='search'\r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange={handleChange}></input>\r\n)\r\n","import './App.css';\nimport React,{ Component } from 'react'\nimport {CardList} from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component';\nclass App extends Component {\n constructor()\n {\n   super();   \n   this.state={\n    monsters:[],\n    searchField:''   \n   }  \n   //this.handleChange=this.handleChange.bind(this);    \n }\n handleChange=(e)=>this.setState({searchField: e.target.value})\n \n componentDidMount()\n   {\n       fetch('https://jsonplaceholder.typicode.com/users')\n       .then(response=>response.json())\n       .then(users=>this.setState({monsters:users}))\n   }\n render () {\n   const{monsters, searchField}=this.state;\n   const filterMonsters= monsters.filter(monster=>monster.name.toLowerCase()\n                                                 .includes(searchField.toLocaleLowerCase())\n                                        )\n     return (\n    <div className=\"App\"> \n    <h1>Monsters Rolodex</h1>\n    <SearchBox placeholder='search monster' handleChange = { this.handleChange  } ></SearchBox>\n   \n    <CardList monsters={filterMonsters}>    \n    </CardList>\n    </div>\n  );\n    }\n\n   \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}